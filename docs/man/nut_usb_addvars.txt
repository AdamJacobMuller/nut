////////
This file is included into other man pages, where appropriate,
by their choice of markup and sectioning (usually lands into
"USB INTERFACE ONLY" for serial/usb or "EXTRA ARGUMENTS").

Keep in sync with nut_usb_addvars() method provided by
* drivers/libusb0.c
* drivers/libusb1.c
* drivers/usb-common.h
////////

*port =* 'string'::

Some 'value' must be set, typically *auto*.
+
NOTE: This could be a device filesystem path like `/dev/usb/hiddev0` but current
use of libusb API precludes knowing and matching by such identifiers.  They may
also be inherently unreliable (dependent on re-plugging and enumeration order).
At this time the actual 'value' is ignored, but some 'port' must be there
syntactically.

*vendorid =* 'regex'::
*productid =* 'regex'::
*vendor =* 'regex'::
*product =* 'regex'::
*serial =* 'regex'::

Select a specific UPS, in case there is more than one connected via
USB. Each option specifies an extended regular expression (see
*regex(7)* that must match the UPS's entire vendor/product/serial
string (minus any surrounding whitespace), or the whole 4-digit
hexadecimal code for `vendorid` and `productid`. Try *-DD* for
finding out the strings to match.
+
Examples:

- `-x vendor="Foo.Corporation.*"`
- `-x vendorid="051d*"` (APC)
- `-x product=".*(Smart|Back)-?UPS.*"`

*bus =* 'regex'::

Select a UPS on a specific USB bus or group of buses. The argument is
a regular expression that must match the bus name where the UPS is
connected (e.g. `bus="002"` or `bus="00[2-3]"`).

*device =* 'regex'::

Select a UPS on a specific USB device or group of devices. The argument is
a regular expression that must match the device name where the UPS is
connected (e.g. `device="001"` or `device="00[1-2]"`).
Note that device numbers are not guaranteed by the OS to be stable across
re-boots or device re-plugging.
